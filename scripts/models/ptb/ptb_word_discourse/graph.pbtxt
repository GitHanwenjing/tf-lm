node {
  name: "Train/Model/inputs"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 35
        }
      }
    }
  }
}
node {
  name: "Train/Model/targets"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 35
        }
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\021\'\000\000"
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0500000007451
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/max"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/RandomUniform"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Initializer/random_uniform"
  op: "Add"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/mul"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 10001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/Assign"
  op: "Assign"
  input: "Model/output_layer_weights/softmax_w"
  input: "Model/output_layer_weights/softmax_w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_w/read"
  op: "Identity"
  input: "Model/output_layer_weights/softmax_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10001
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0500000007451
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/max"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/RandomUniform"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Initializer/random_uniform"
  op: "Add"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/mul"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/Assign"
  op: "Assign"
  input: "Model/output_layer_weights/softmax_b"
  input: "Model/output_layer_weights/softmax_b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/output_layer_weights/softmax_b/read"
  op: "Identity"
  input: "Model/output_layer_weights/softmax_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Model/get_output/embedding/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\021\'\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Model/get_output/embedding/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0500000007451
      }
    }
  }
}
node {
  name: "Model/get_output/embedding/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "Model/get_output/embedding/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/get_output/embedding/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/get_output/embedding/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/get_output/embedding/Initializer/random_uniform/max"
  input: "Model/get_output/embedding/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/get_output/embedding/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/get_output/embedding/Initializer/random_uniform/RandomUniform"
  input: "Model/get_output/embedding/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Model/get_output/embedding/Initializer/random_uniform"
  op: "Add"
  input: "Model/get_output/embedding/Initializer/random_uniform/mul"
  input: "Model/get_output/embedding/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Model/get_output/embedding"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10001
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/get_output/embedding/Assign"
  op: "Assign"
  input: "Model/get_output/embedding"
  input: "Model/get_output/embedding/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/get_output/embedding/read"
  op: "Identity"
  input: "Model/get_output/embedding"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/input_embeddings"
  op: "Gather"
  input: "Model/get_output/embedding/read"
  input: "Train/Model/inputs"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/keep_prob"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000#\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 56
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/sub"
  op: "Sub"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/max"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/mul"
  op: "Mul"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/RandomUniform"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform"
  op: "Add"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/mul"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/add"
  op: "Add"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/keep_prob"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/Floor"
  op: "Floor"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/div"
  op: "RealDiv"
  input: "Train/Model/get_output/embedding_lookup/input_embeddings"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/embedding_lookup/dropout_inputs/mul"
  op: "Mul"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/div"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Train/Model/get_output/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/get_output/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/range"
  op: "Range"
  input: "Train/Model/get_output/range/start"
  input: "Train/Model/get_output/Rank"
  input: "Train/Model/get_output/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/concat"
  op: "ConcatV2"
  input: "Train/Model/get_output/concat/values_0"
  input: "Train/Model/get_output/range"
  input: "Train/Model/get_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/transpose"
  op: "Transpose"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/mul"
  input: "Train/Model/get_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 35
          }
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "#\000\000\000\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/get_output/rnn/Shape"
  input: "Train/Model/get_output/rnn/strided_slice/stack"
  input: "Train/Model/get_output/rnn/strided_slice/stack_1"
  input: "Train/Model/get_output/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/concat"
  op: "ConcatV2"
  input: "Train/Model/get_output/rnn/Const"
  input: "Train/Model/get_output/rnn/Const_1"
  input: "Train/Model/get_output/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/zeros"
  op: "Fill"
  input: "Train/Model/get_output/rnn/concat"
  input: "Train/Model/get_output/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "Train/Model/get_output/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Train/Model/get_output/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "Train/Model/get_output/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Train/Model/get_output/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "#\000\000\000\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/Shape"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/range/start"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/strided_slice"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Train/Model/get_output/rnn/TensorArray_1"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/range"
  input: "Train/Model/get_output/transpose"
  input: "Train/Model/get_output/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Enter"
  op: "Enter"
  input: "Train/Model/get_output/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Enter_1"
  op: "Enter"
  input: "Train/Model/get_output/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Enter_2"
  op: "Enter"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Enter_3"
  op: "Enter"
  input: "Train/Model/lstm/DropoutWrapperZeroState/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Merge"
  op: "Merge"
  input: "Train/Model/get_output/rnn/while/Enter"
  input: "Train/Model/get_output/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Merge_1"
  op: "Merge"
  input: "Train/Model/get_output/rnn/while/Enter_1"
  input: "Train/Model/get_output/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Merge_2"
  op: "Merge"
  input: "Train/Model/get_output/rnn/while/Enter_2"
  input: "Train/Model/get_output/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Merge_3"
  op: "Merge"
  input: "Train/Model/get_output/rnn/while/Enter_3"
  input: "Train/Model/get_output/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Less/Enter"
  op: "Enter"
  input: "Train/Model/get_output/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Less"
  op: "Less"
  input: "Train/Model/get_output/rnn/while/Merge"
  input: "Train/Model/get_output/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/LoopCond"
  op: "LoopCond"
  input: "Train/Model/get_output/rnn/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Switch"
  op: "Switch"
  input: "Train/Model/get_output/rnn/while/Merge"
  input: "Train/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Switch_1"
  op: "Switch"
  input: "Train/Model/get_output/rnn/while/Merge_1"
  input: "Train/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Switch_2"
  op: "Switch"
  input: "Train/Model/get_output/rnn/while/Merge_2"
  input: "Train/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Switch_3"
  op: "Switch"
  input: "Train/Model/get_output/rnn/while/Merge_3"
  input: "Train/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Identity"
  op: "Identity"
  input: "Train/Model/get_output/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Identity_1"
  op: "Identity"
  input: "Train/Model/get_output/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Identity_2"
  op: "Identity"
  input: "Train/Model/get_output/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Identity_3"
  op: "Identity"
  input: "Train/Model/get_output/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Train/Model/get_output/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
  input: "Train/Model/get_output/rnn/while/Identity"
  input: "Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0500000007451
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "Train/Model/get_output/rnn/while/TensorArrayReadV3"
  input: "Train/Model/get_output/rnn/while/Identity_3"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Const"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:2"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "Train/Model/get_output/rnn/while/Identity_2"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/keep_prob"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/Shape"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/random_uniform/min"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/random_uniform/max"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Train/Model/get_output/rnn/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 155
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "Train/Model/get_output/rnn/while/dropout/random_uniform/max"
  input: "Train/Model/get_output/rnn/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "Train/Model/get_output/rnn/while/dropout/random_uniform/RandomUniform"
  input: "Train/Model/get_output/rnn/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/random_uniform"
  op: "Add"
  input: "Train/Model/get_output/rnn/while/dropout/random_uniform/mul"
  input: "Train/Model/get_output/rnn/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/add"
  op: "Add"
  input: "Train/Model/get_output/rnn/while/dropout/keep_prob"
  input: "Train/Model/get_output/rnn/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/Floor"
  op: "Floor"
  input: "Train/Model/get_output/rnn/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/div"
  op: "RealDiv"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "Train/Model/get_output/rnn/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/dropout/mul"
  op: "Mul"
  input: "Train/Model/get_output/rnn/while/dropout/div"
  input: "Train/Model/get_output/rnn/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Train/Model/get_output/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "Train/Model/get_output/rnn/while/Identity"
  input: "Train/Model/get_output/rnn/while/dropout/mul"
  input: "Train/Model/get_output/rnn/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/add/y"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/add"
  op: "Add"
  input: "Train/Model/get_output/rnn/while/Identity"
  input: "Train/Model/get_output/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/NextIteration"
  op: "NextIteration"
  input: "Train/Model/get_output/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Exit"
  op: "Exit"
  input: "Train/Model/get_output/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Exit_1"
  op: "Exit"
  input: "Train/Model/get_output/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Exit_2"
  op: "Exit"
  input: "Train/Model/get_output/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/while/Exit_3"
  op: "Exit"
  input: "Train/Model/get_output/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Train/Model/get_output/rnn/TensorArray"
  input: "Train/Model/get_output/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayStack/range"
  op: "Range"
  input: "Train/Model/get_output/rnn/TensorArrayStack/range/start"
  input: "Train/Model/get_output/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "Train/Model/get_output/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Train/Model/get_output/rnn/TensorArray"
  input: "Train/Model/get_output/rnn/TensorArrayStack/range"
  input: "Train/Model/get_output/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 35
          }
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/range"
  op: "Range"
  input: "Train/Model/get_output/rnn/range/start"
  input: "Train/Model/get_output/rnn/Rank"
  input: "Train/Model/get_output/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/concat_1"
  op: "ConcatV2"
  input: "Train/Model/get_output/rnn/concat_1/values_0"
  input: "Train/Model/get_output/rnn/range"
  input: "Train/Model/get_output/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/rnn/transpose"
  op: "Transpose"
  input: "Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "Train/Model/get_output/rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/get_output/concat_1"
  op: "Identity"
  input: "Train/Model/get_output/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_output/reshape_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/get_output/reshape_output"
  op: "Reshape"
  input: "Train/Model/get_output/concat_1"
  input: "Train/Model/get_output/reshape_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/MatMul"
  op: "MatMul"
  input: "Train/Model/get_output/reshape_output"
  input: "Model/output_layer_weights/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/get_outputs/add"
  op: "Add"
  input: "Train/Model/get_outputs/MatMul"
  input: "Model/output_layer_weights/softmax_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/softmax"
  op: "Softmax"
  input: "Train/Model/get_outputs/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/Reshape"
  op: "Reshape"
  input: "Train/Model/targets"
  input: "Train/Model/get_outputs/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 700
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Train/Model/get_outputs/add"
  input: "Train/Model/get_outputs/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
        }
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/reduce_loss"
  op: "Sum"
  input: "Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Train/Model/get_outputs/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/get_outputs/div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "Train/Model/get_outputs/div"
  op: "RealDiv"
  input: "Train/Model/get_outputs/reduce_loss"
  input: "Train/Model/get_outputs/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/learning_rate/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/learning_rate"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/learning_rate/Assign"
  op: "Assign"
  input: "Train/Model/train_model/learning_rate"
  input: "Train/Model/train_model/learning_rate/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/train_model/learning_rate/read"
  op: "Identity"
  input: "Train/Model/train_model/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/epoch/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/epoch"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/epoch/Assign"
  op: "Assign"
  input: "Train/Model/train_model/epoch"
  input: "Train/Model/train_model/epoch/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/epoch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/train_model/epoch/read"
  op: "Identity"
  input: "Train/Model/train_model/epoch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/epoch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/global_step/Assign"
  op: "Assign"
  input: "Train/Model/train_model/global_step"
  input: "Train/Model/train_model/global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/train_model/global_step/read"
  op: "Identity"
  input: "Train/Model/train_model/global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Fill"
  op: "Fill"
  input: "Train/Model/train_model/gradients/Shape"
  input: "Train/Model/train_model/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/f_count_1"
  op: "Enter"
  input: "Train/Model/train_model/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Merge"
  op: "Merge"
  input: "Train/Model/train_model/gradients/f_count_1"
  input: "Train/Model/train_model/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Switch"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Merge"
  input: "Train/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Add/y"
  op: "Const"
  input: "^Train/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Add"
  op: "Add"
  input: "Train/Model/train_model/gradients/Switch:1"
  input: "Train/Model/train_model/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/NextIteration"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Add"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPushV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/f_count_2"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/b_count_1"
  op: "Enter"
  input: "Train/Model/train_model/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Merge_1"
  op: "Merge"
  input: "Train/Model/train_model/gradients/b_count_1"
  input: "Train/Model/train_model/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "Train/Model/train_model/gradients/Merge_1"
  input: "Train/Model/train_model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/b_count_2"
  op: "LoopCond"
  input: "Train/Model/train_model/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Switch_1"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Merge_1"
  input: "Train/Model/train_model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Sub"
  op: "Sub"
  input: "Train/Model/train_model/gradients/Switch_1:1"
  input: "Train/Model/train_model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/NextIteration_1"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Sub"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/b_count_3"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/RealDiv"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Fill"
  input: "Train/Model/get_outputs/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Neg"
  op: "Neg"
  input: "Train/Model/get_outputs/reduce_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Neg"
  input: "Train/Model/get_outputs/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/RealDiv_1"
  input: "Train/Model/get_outputs/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Fill"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/div_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 700
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Tile"
  op: "Tile"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/reduce_loss_grad/Tile"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\274\002\000\000\021\'\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10001
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape"
  input: "Model/output_layer_weights/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/get_output/reshape_output"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/reshape_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000#\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/reshape_output_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/reshape_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Train/Model/get_output/rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/reshape_output_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 35
          }
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "Train/Model/get_output/rnn/TensorArray"
  input: "Train/Model/get_output/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/train_model/gradients"
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/get_output/rnn/while/Exit_1"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "Train/Model/get_output/rnn/TensorArrayStack/range"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/transpose_grad/transpose"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "Train/Model/train_model/gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "Train/Model/train_model/gradients/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Exit_1_grad/b_exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Exit_2_grad/b_exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Exit_3_grad/b_exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_1_grad/b_switch"
  input: "Train/Model/train_model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_2_grad/b_switch"
  input: "Train/Model/train_model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_3_grad/b_switch"
  input: "Train/Model/train_model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "Train/Model/get_output/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_1_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/train_model/gradients"
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_1_grad/Switch:1"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "Train/Model/get_output/rnn/while/Identity"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPopV2"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/Enter"
  input: "Train/Model/get_output/rnn/while/dropout/Floor"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/Enter"
  input: "Train/Model/get_output/rnn/while/dropout/div"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/mul_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/Enter"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Neg"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/mul_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_1_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/AddN"
  op: "AddN"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_3_grad/Switch:1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/dropout/div_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/Enter"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/AddN"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/Enter"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPopV2"
  input: "Train/Model/train_model/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/AddN_1"
  op: "AddN"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Merge_2_grad/Switch:1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/AddN_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/AddN_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/Enter"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/Enter"
  input: "Train/Model/get_output/rnn/while/Identity_2"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/Enter"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/Enter"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc/max_size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc/max_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
  input: "^Train/Model/train_model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "Train/Model/train_model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/mod/Const"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/mod/Const"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/mod"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "Train/Model/train_model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "Train/Model/get_output/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^Train/Model/train_model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/train_model/gradients"
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Slice"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "Train/Model/train_model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "Train/Model/get_output/rnn/TensorArray_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/train_model/gradients"
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/get_output/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "Train/Model/get_output/rnn/TensorArrayUnstack/range"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 35
          }
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Train/Model/get_output/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/transpose_grad/transpose"
  op: "Transpose"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000#\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000#\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/transpose_grad/transpose"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/div"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/mul_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\024\000\000\000#\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Shape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/RealDiv"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Reshape"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Sum"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Neg"
  op: "Neg"
  input: "Train/Model/get_output/embedding_lookup/input_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Neg"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/RealDiv_1"
  input: "Train/Model/get_output/embedding_lookup/dropout_inputs/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/mul"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/mul_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Sum_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\021\'\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/ToInt32"
  op: "Cast"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 700
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/ExpandDims"
  op: "ExpandDims"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Size"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/ToInt32"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice/stack"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice/stack_1"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/concat"
  op: "ConcatV2"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/ExpandDims"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/strided_slice"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/dropout_inputs/div_grad/Reshape"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/inputs"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/L2Loss"
  op: "L2Loss"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/L2Loss_1"
  op: "L2Loss"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/L2Loss_2"
  op: "L2Loss"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/L2Loss_3"
  op: "L2Loss"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/L2Loss_4"
  op: "L2Loss"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/stack"
  op: "Pack"
  input: "Train/Model/train_model/clipped_gradients/L2Loss"
  input: "Train/Model/train_model/clipped_gradients/L2Loss_1"
  input: "Train/Model/train_model/clipped_gradients/L2Loss_2"
  input: "Train/Model/train_model/clipped_gradients/L2Loss_3"
  input: "Train/Model/train_model/clipped_gradients/L2Loss_4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/Sum"
  op: "Sum"
  input: "Train/Model/train_model/clipped_gradients/stack"
  input: "Train/Model/train_model/clipped_gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/mul"
  op: "Mul"
  input: "Train/Model/train_model/clipped_gradients/Sum"
  input: "Train/Model/train_model/clipped_gradients/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients/global_norm"
  op: "Sqrt"
  input: "Train/Model/train_model/clipped_gradients/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/truediv"
  op: "RealDiv"
  input: "Train/Model/train_model/clipped_gradients_1/truediv/x"
  input: "Train/Model/train_model/clipped_gradients/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/truediv_1"
  op: "RealDiv"
  input: "Train/Model/train_model/clipped_gradients_1/Const"
  input: "Train/Model/train_model/clipped_gradients_1/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/Minimum"
  op: "Minimum"
  input: "Train/Model/train_model/clipped_gradients_1/truediv"
  input: "Train/Model/train_model/clipped_gradients_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/mul"
  op: "Mul"
  input: "Train/Model/train_model/clipped_gradients_1/mul/x"
  input: "Train/Model/train_model/clipped_gradients_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/mul_1"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul_1"
  input: "Train/Model/train_model/clipped_gradients_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_0"
  op: "Identity"
  input: "Train/Model/train_model/clipped_gradients_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_outputs/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/mul_2"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape_1"
  input: "Train/Model/train_model/clipped_gradients_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_1"
  op: "Identity"
  input: "Train/Model/train_model/clipped_gradients_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_outputs/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/mul_3"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape"
  input: "Train/Model/train_model/clipped_gradients_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_2"
  op: "Identity"
  input: "Train/Model/train_model/clipped_gradients_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/mul_4"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "Train/Model/train_model/clipped_gradients_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_3"
  op: "Identity"
  input: "Train/Model/train_model/clipped_gradients_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/mul_5"
  op: "Mul"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "Train/Model/train_model/clipped_gradients_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_4"
  op: "Identity"
  input: "Train/Model/train_model/clipped_gradients_1/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/gradients/Train/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/train_op/update_Model/output_layer_weights/softmax_w/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/output_layer_weights/softmax_w"
  input: "Train/Model/train_model/learning_rate/read"
  input: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/train_op/update_Model/output_layer_weights/softmax_b/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/output_layer_weights/softmax_b"
  input: "Train/Model/train_model/learning_rate/read"
  input: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/train_op/update_Model/get_output/embedding/mul"
  op: "Mul"
  input: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_2"
  input: "Train/Model/train_model/learning_rate/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/train_model/train_op/update_Model/get_output/embedding/ScatterSub"
  op: "ScatterSub"
  input: "Model/get_output/embedding"
  input: "Train/Model/train_model/gradients/Train/Model/get_output/embedding_lookup/input_embeddings_grad/Reshape_1"
  input: "Train/Model/train_model/train_op/update_Model/get_output/embedding/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/train_op/update_Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "Train/Model/train_model/learning_rate/read"
  input: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/train_op/update_Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "Train/Model/train_model/learning_rate/read"
  input: "Train/Model/train_model/clipped_gradients_1/Train/Model/train_model/clipped_gradients_1/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/train_op/update"
  op: "NoOp"
  input: "^Train/Model/train_model/train_op/update_Model/output_layer_weights/softmax_w/ApplyGradientDescent"
  input: "^Train/Model/train_model/train_op/update_Model/output_layer_weights/softmax_b/ApplyGradientDescent"
  input: "^Train/Model/train_model/train_op/update_Model/get_output/embedding/ScatterSub"
  input: "^Train/Model/train_model/train_op/update_Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyGradientDescent"
  input: "^Train/Model/train_model/train_op/update_Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyGradientDescent"
}
node {
  name: "Train/Model/train_model/train_op/value"
  op: "Const"
  input: "^Train/Model/train_model/train_op/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/train_model/train_op"
  op: "AssignAdd"
  input: "Train/Model/train_model/global_step"
  input: "Train/Model/train_model/train_op/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/train_model/new_learning_rate"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Train/Model/train_model/Assign"
  op: "Assign"
  input: "Train/Model/train_model/learning_rate"
  input: "Train/Model/train_model/new_learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/train_model/new_epoch"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Train/Model/train_model/Assign_1"
  op: "Assign"
  input: "Train/Model/train_model/epoch"
  input: "Train/Model/train_model/new_epoch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/epoch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Valid/Model/inputs"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 35
        }
      }
    }
  }
}
node {
  name: "Valid/Model/targets"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 35
        }
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/embedding_lookup/input_embeddings"
  op: "Gather"
  input: "Model/get_output/embedding/read"
  input: "Valid/Model/inputs"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Valid/Model/get_output/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/range"
  op: "Range"
  input: "Valid/Model/get_output/range/start"
  input: "Valid/Model/get_output/Rank"
  input: "Valid/Model/get_output/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/concat"
  op: "ConcatV2"
  input: "Valid/Model/get_output/concat/values_0"
  input: "Valid/Model/get_output/range"
  input: "Valid/Model/get_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/transpose"
  op: "Transpose"
  input: "Valid/Model/get_output/embedding_lookup/input_embeddings"
  input: "Valid/Model/get_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 35
          }
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "#\000\000\000\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/strided_slice"
  op: "StridedSlice"
  input: "Valid/Model/get_output/rnn/Shape"
  input: "Valid/Model/get_output/rnn/strided_slice/stack"
  input: "Valid/Model/get_output/rnn/strided_slice/stack_1"
  input: "Valid/Model/get_output/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/concat"
  op: "ConcatV2"
  input: "Valid/Model/get_output/rnn/Const"
  input: "Valid/Model/get_output/rnn/Const_1"
  input: "Valid/Model/get_output/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/zeros"
  op: "Fill"
  input: "Valid/Model/get_output/rnn/concat"
  input: "Valid/Model/get_output/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "Valid/Model/get_output/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Valid/Model/get_output/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "Valid/Model/get_output/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Valid/Model/get_output/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "#\000\000\000\024\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/Shape"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/range/start"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/strided_slice"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Valid/Model/get_output/rnn/TensorArray_1"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/range"
  input: "Valid/Model/get_output/transpose"
  input: "Valid/Model/get_output/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Enter"
  op: "Enter"
  input: "Valid/Model/get_output/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Enter_1"
  op: "Enter"
  input: "Valid/Model/get_output/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Enter_2"
  op: "Enter"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Enter_3"
  op: "Enter"
  input: "Valid/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Merge"
  op: "Merge"
  input: "Valid/Model/get_output/rnn/while/Enter"
  input: "Valid/Model/get_output/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Merge_1"
  op: "Merge"
  input: "Valid/Model/get_output/rnn/while/Enter_1"
  input: "Valid/Model/get_output/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Merge_2"
  op: "Merge"
  input: "Valid/Model/get_output/rnn/while/Enter_2"
  input: "Valid/Model/get_output/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Merge_3"
  op: "Merge"
  input: "Valid/Model/get_output/rnn/while/Enter_3"
  input: "Valid/Model/get_output/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Less/Enter"
  op: "Enter"
  input: "Valid/Model/get_output/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Less"
  op: "Less"
  input: "Valid/Model/get_output/rnn/while/Merge"
  input: "Valid/Model/get_output/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/LoopCond"
  op: "LoopCond"
  input: "Valid/Model/get_output/rnn/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Switch"
  op: "Switch"
  input: "Valid/Model/get_output/rnn/while/Merge"
  input: "Valid/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Switch_1"
  op: "Switch"
  input: "Valid/Model/get_output/rnn/while/Merge_1"
  input: "Valid/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Switch_2"
  op: "Switch"
  input: "Valid/Model/get_output/rnn/while/Merge_2"
  input: "Valid/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Switch_3"
  op: "Switch"
  input: "Valid/Model/get_output/rnn/while/Merge_3"
  input: "Valid/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Identity"
  op: "Identity"
  input: "Valid/Model/get_output/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Identity_1"
  op: "Identity"
  input: "Valid/Model/get_output/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Identity_2"
  op: "Identity"
  input: "Valid/Model/get_output/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Identity_3"
  op: "Identity"
  input: "Valid/Model/get_output/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Valid/Model/get_output/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "Valid/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Valid/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
  input: "Valid/Model/get_output/rnn/while/Identity"
  input: "Valid/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^Valid/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "Valid/Model/get_output/rnn/while/TensorArrayReadV3"
  input: "Valid/Model/get_output/rnn/while/Identity_3"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Const"
  op: "Const"
  input: "^Valid/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^Valid/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  input: "^Valid/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:2"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "Valid/Model/get_output/rnn/while/Identity_2"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Valid/Model/get_output/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Valid/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Valid/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "Valid/Model/get_output/rnn/while/Identity"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "Valid/Model/get_output/rnn/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/add/y"
  op: "Const"
  input: "^Valid/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/add"
  op: "Add"
  input: "Valid/Model/get_output/rnn/while/Identity"
  input: "Valid/Model/get_output/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/NextIteration"
  op: "NextIteration"
  input: "Valid/Model/get_output/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "Valid/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "Valid/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Exit"
  op: "Exit"
  input: "Valid/Model/get_output/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Exit_1"
  op: "Exit"
  input: "Valid/Model/get_output/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Exit_2"
  op: "Exit"
  input: "Valid/Model/get_output/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/while/Exit_3"
  op: "Exit"
  input: "Valid/Model/get_output/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Valid/Model/get_output/rnn/TensorArray"
  input: "Valid/Model/get_output/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayStack/range"
  op: "Range"
  input: "Valid/Model/get_output/rnn/TensorArrayStack/range/start"
  input: "Valid/Model/get_output/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "Valid/Model/get_output/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Valid/Model/get_output/rnn/TensorArray"
  input: "Valid/Model/get_output/rnn/TensorArrayStack/range"
  input: "Valid/Model/get_output/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Valid/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 35
          }
          dim {
            size: 20
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/range"
  op: "Range"
  input: "Valid/Model/get_output/rnn/range/start"
  input: "Valid/Model/get_output/rnn/Rank"
  input: "Valid/Model/get_output/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/concat_1"
  op: "ConcatV2"
  input: "Valid/Model/get_output/rnn/concat_1/values_0"
  input: "Valid/Model/get_output/rnn/range"
  input: "Valid/Model/get_output/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/rnn/transpose"
  op: "Transpose"
  input: "Valid/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "Valid/Model/get_output/rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/concat_1"
  op: "Identity"
  input: "Valid/Model/get_output/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 35
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/reshape_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\002\000\000"
      }
    }
  }
}
node {
  name: "Valid/Model/get_output/reshape_output"
  op: "Reshape"
  input: "Valid/Model/get_output/concat_1"
  input: "Valid/Model/get_output/reshape_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/MatMul"
  op: "MatMul"
  input: "Valid/Model/get_output/reshape_output"
  input: "Model/output_layer_weights/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Valid/Model/get_outputs/add"
  op: "Add"
  input: "Valid/Model/get_outputs/MatMul"
  input: "Model/output_layer_weights/softmax_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/softmax"
  op: "Softmax"
  input: "Valid/Model/get_outputs/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/Reshape"
  op: "Reshape"
  input: "Valid/Model/targets"
  input: "Valid/Model/get_outputs/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 700
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Valid/Model/get_outputs/add"
  input: "Valid/Model/get_outputs/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 700
          }
        }
        shape {
          dim {
            size: 700
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/reduce_loss"
  op: "Sum"
  input: "Valid/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Valid/Model/get_outputs/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Valid/Model/get_outputs/div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "Valid/Model/get_outputs/div"
  op: "RealDiv"
  input: "Valid/Model/get_outputs/reduce_loss"
  input: "Valid/Model/get_outputs/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/inputs"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Test/Model/targets"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Test/Model/get_output/embedding_lookup/input_embeddings"
  op: "Gather"
  input: "Model/get_output/embedding/read"
  input: "Test/Model/inputs"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Test/Model/get_output/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Test/Model/get_output/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Test/Model/get_output/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/range"
  op: "Range"
  input: "Test/Model/get_output/range/start"
  input: "Test/Model/get_output/Rank"
  input: "Test/Model/get_output/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/get_output/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/concat"
  op: "ConcatV2"
  input: "Test/Model/get_output/concat/values_0"
  input: "Test/Model/get_output/range"
  input: "Test/Model/get_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/transpose"
  op: "Transpose"
  input: "Test/Model/get_output/embedding_lookup/input_embeddings"
  input: "Test/Model/get_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/strided_slice"
  op: "StridedSlice"
  input: "Test/Model/get_output/rnn/Shape"
  input: "Test/Model/get_output/rnn/strided_slice/stack"
  input: "Test/Model/get_output/rnn/strided_slice/stack_1"
  input: "Test/Model/get_output/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/concat"
  op: "ConcatV2"
  input: "Test/Model/get_output/rnn/Const"
  input: "Test/Model/get_output/rnn/Const_1"
  input: "Test/Model/get_output/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/zeros"
  op: "Fill"
  input: "Test/Model/get_output/rnn/concat"
  input: "Test/Model/get_output/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "Test/Model/get_output/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Test/Model/get_output/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "Test/Model/get_output/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Test/Model/get_output/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/Shape"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/range/start"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/strided_slice"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Test/Model/get_output/rnn/TensorArray_1"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/range"
  input: "Test/Model/get_output/transpose"
  input: "Test/Model/get_output/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Enter"
  op: "Enter"
  input: "Test/Model/get_output/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Enter_1"
  op: "Enter"
  input: "Test/Model/get_output/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Enter_2"
  op: "Enter"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Enter_3"
  op: "Enter"
  input: "Test/Model/lstm/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Merge"
  op: "Merge"
  input: "Test/Model/get_output/rnn/while/Enter"
  input: "Test/Model/get_output/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Merge_1"
  op: "Merge"
  input: "Test/Model/get_output/rnn/while/Enter_1"
  input: "Test/Model/get_output/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Merge_2"
  op: "Merge"
  input: "Test/Model/get_output/rnn/while/Enter_2"
  input: "Test/Model/get_output/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Merge_3"
  op: "Merge"
  input: "Test/Model/get_output/rnn/while/Enter_3"
  input: "Test/Model/get_output/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Less/Enter"
  op: "Enter"
  input: "Test/Model/get_output/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Less"
  op: "Less"
  input: "Test/Model/get_output/rnn/while/Merge"
  input: "Test/Model/get_output/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/LoopCond"
  op: "LoopCond"
  input: "Test/Model/get_output/rnn/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Switch"
  op: "Switch"
  input: "Test/Model/get_output/rnn/while/Merge"
  input: "Test/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Switch_1"
  op: "Switch"
  input: "Test/Model/get_output/rnn/while/Merge_1"
  input: "Test/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Switch_2"
  op: "Switch"
  input: "Test/Model/get_output/rnn/while/Merge_2"
  input: "Test/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Switch_3"
  op: "Switch"
  input: "Test/Model/get_output/rnn/while/Merge_3"
  input: "Test/Model/get_output/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Identity"
  op: "Identity"
  input: "Test/Model/get_output/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Identity_1"
  op: "Identity"
  input: "Test/Model/get_output/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Identity_2"
  op: "Identity"
  input: "Test/Model/get_output/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Identity_3"
  op: "Identity"
  input: "Test/Model/get_output/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Test/Model/get_output/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "Test/Model/get_output/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Test/Model/get_output/rnn/while/TensorArrayReadV3/Enter"
  input: "Test/Model/get_output/rnn/while/Identity"
  input: "Test/Model/get_output/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^Test/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "Test/Model/get_output/rnn/while/TensorArrayReadV3"
  input: "Test/Model/get_output/rnn/while/Identity_3"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/concat"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/MatMul"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Const"
  op: "Const"
  input: "^Test/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^Test/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  input: "^Test/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:2"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "Test/Model/get_output/rnn/while/Identity_2"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Test/Model/get_output/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Test/Model/get_output/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Test/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "Test/Model/get_output/rnn/while/Identity"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "Test/Model/get_output/rnn/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/add/y"
  op: "Const"
  input: "^Test/Model/get_output/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/add"
  op: "Add"
  input: "Test/Model/get_output/rnn/while/Identity"
  input: "Test/Model/get_output/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/NextIteration"
  op: "NextIteration"
  input: "Test/Model/get_output/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "Test/Model/get_output/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "Test/Model/get_output/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Exit"
  op: "Exit"
  input: "Test/Model/get_output/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Exit_1"
  op: "Exit"
  input: "Test/Model/get_output/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Exit_2"
  op: "Exit"
  input: "Test/Model/get_output/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/while/Exit_3"
  op: "Exit"
  input: "Test/Model/get_output/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Test/Model/get_output/rnn/TensorArray"
  input: "Test/Model/get_output/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayStack/range"
  op: "Range"
  input: "Test/Model/get_output/rnn/TensorArrayStack/range/start"
  input: "Test/Model/get_output/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "Test/Model/get_output/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Test/Model/get_output/rnn/TensorArray"
  input: "Test/Model/get_output/rnn/TensorArrayStack/range"
  input: "Test/Model/get_output/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/Model/get_output/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/range"
  op: "Range"
  input: "Test/Model/get_output/rnn/range/start"
  input: "Test/Model/get_output/rnn/Rank"
  input: "Test/Model/get_output/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/concat_1"
  op: "ConcatV2"
  input: "Test/Model/get_output/rnn/concat_1/values_0"
  input: "Test/Model/get_output/rnn/range"
  input: "Test/Model/get_output/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/rnn/transpose"
  op: "Transpose"
  input: "Test/Model/get_output/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "Test/Model/get_output/rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_output/concat_1"
  op: "Identity"
  input: "Test/Model/get_output/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_output/reshape_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\002\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/get_output/reshape_output"
  op: "Reshape"
  input: "Test/Model/get_output/concat_1"
  input: "Test/Model/get_output/reshape_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/MatMul"
  op: "MatMul"
  input: "Test/Model/get_output/reshape_output"
  input: "Model/output_layer_weights/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/get_outputs/add"
  op: "Add"
  input: "Test/Model/get_outputs/MatMul"
  input: "Model/output_layer_weights/softmax_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/softmax"
  op: "Softmax"
  input: "Test/Model/get_outputs/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/Reshape"
  op: "Reshape"
  input: "Test/Model/targets"
  input: "Test/Model/get_outputs/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Test/Model/get_outputs/add"
  input: "Test/Model/get_outputs/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/reduce_loss"
  op: "Sum"
  input: "Test/Model/get_outputs/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Test/Model/get_outputs/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/get_outputs/div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Test/Model/get_outputs/div"
  op: "RealDiv"
  input: "Test/Model/get_outputs/reduce_loss"
  input: "Test/Model/get_outputs/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "Model/output_layer_weights/softmax_w"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Model/output_layer_weights/softmax_b"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Model/get_output/embedding"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Train/Model/train_model/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Train/Model/train_model/epoch"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/epoch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Train/Model/train_model/global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "Model/output_layer_weights/softmax_w"
        string_val: "Model/output_layer_weights/softmax_b"
        string_val: "Model/get_output/embedding"
        string_val: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "Train/Model/train_model/learning_rate"
        string_val: "Train/Model/train_model/epoch"
        string_val: "Train/Model/train_model/global_step"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Model/output_layer_weights/softmax_w/Assign"
  input: "^Model/output_layer_weights/softmax_b/Assign"
  input: "^Model/get_output/embedding/Assign"
  input: "^Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  input: "^Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  input: "^Train/Model/train_model/learning_rate/Assign"
  input: "^Train/Model/train_model/epoch/Assign"
  input: "^Train/Model/train_model/global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "Model/get_output/embedding"
        string_val: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "Model/output_layer_weights/softmax_b"
        string_val: "Model/output_layer_weights/softmax_w"
        string_val: "Train/Model/train_model/epoch"
        string_val: "Train/Model/train_model/global_step"
        string_val: "Train/Model/train_model/learning_rate"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Model/get_output/embedding"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "Model/output_layer_weights/softmax_b"
  input: "Model/output_layer_weights/softmax_w"
  input: "Train/Model/train_model/epoch"
  input: "Train/Model/train_model/global_step"
  input: "Train/Model/train_model/learning_rate"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/get_output/embedding"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Model/get_output/embedding"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/get_output/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/output_layer_weights/softmax_b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Model/output_layer_weights/softmax_b"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/output_layer_weights/softmax_w"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Model/output_layer_weights/softmax_w"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/output_layer_weights/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 10001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Train/Model/train_model/epoch"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Train/Model/train_model/epoch"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/epoch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Train/Model/train_model/global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Train/Model/train_model/global_step"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Train/Model/train_model/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Train/Model/train_model/learning_rate"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/train_model/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
}
versions {
  producer: 24
}
